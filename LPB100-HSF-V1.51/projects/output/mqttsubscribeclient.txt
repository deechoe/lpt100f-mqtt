; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\mqttsubscribeclient.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\mqttsubscribeclient.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931,494 -I..\sdk\1.51\include -I..\..\usr -I..\..\mqtt -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -D__KEIL_MDK__ -D__LPT100F__ --enum_is_int --signed_chars --omf_browse=.\output\mqttsubscribeclient.crf ..\..\mqtt\MQTTSubscribeClient.c]
                          THUMB

                          AREA ||i.MQTTDeserialize_suback||, CODE, READONLY, ALIGN=1

                  MQTTDeserialize_suback PROC
;;;99       */
;;;100    int MQTTDeserialize_suback(unsigned short* packetid, int maxcount, int* count, int grantedQoSs[], unsigned char* buf, int buflen)
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;101    {
000004  4682              MOV      r10,r0
;;;102    	MQTTHeader header = {0};
000006  f04f0900          MOV      r9,#0
;;;103    	unsigned char* curdata = buf;
00000a  980a              LDR      r0,[sp,#0x28]
;;;104    	unsigned char* enddata = NULL;
;;;105    	int rc = 0;
;;;106    	int mylen;
;;;107    
;;;108    	FUNC_ENTRY;
;;;109    	header.byte = readChar(&curdata);
00000c  9000              STR      r0,[sp,#0]
00000e  461e              MOV      r6,r3                 ;101
000010  4614              MOV      r4,r2                 ;101
000012  4688              MOV      r8,r1                 ;101
000014  464d              MOV      r5,r9                 ;102
000016  464f              MOV      r7,r9                 ;105
000018  4668              MOV      r0,sp
00001a  f7fffffe          BL       readChar
00001e  f3600507          BFI      r5,r0,#0,#8
;;;110    	if (header.bits.type != SUBACK)
000022  0928              LSRS     r0,r5,#4
000024  2809              CMP      r0,#9
000026  d126              BNE      |L1.118|
;;;111    		goto exit;
;;;112    
;;;113    	curdata += (rc = MQTTPacket_decodeBuf(curdata, &mylen)); /* read remaining length */
000028  a901              ADD      r1,sp,#4
00002a  9800              LDR      r0,[sp,#0]
00002c  f7fffffe          BL       MQTTPacket_decodeBuf
000030  9900              LDR      r1,[sp,#0]
000032  4607              MOV      r7,r0
000034  4408              ADD      r0,r0,r1
;;;114    	enddata = curdata + mylen;
000036  9901              LDR      r1,[sp,#4]
000038  9000              STR      r0,[sp,#0]
00003a  1845              ADDS     r5,r0,r1
;;;115    	if (enddata - curdata < 2)
00003c  1a28              SUBS     r0,r5,r0
00003e  2802              CMP      r0,#2
000040  db19              BLT      |L1.118|
;;;116    		goto exit;
;;;117    
;;;118    	*packetid = readInt(&curdata);
000042  4668              MOV      r0,sp
000044  f7fffffe          BL       readInt
000048  f8aa0000          STRH     r0,[r10,#0]
;;;119    
;;;120    	*count = 0;
;;;121    	while (curdata < enddata)
00004c  f8c49000          STR      r9,[r4,#0]
000050  e00d              B        |L1.110|
                  |L1.82|
;;;122    	{
;;;123    		if (*count > maxcount)
000052  6821              LDR      r1,[r4,#0]
000054  4541              CMP      r1,r8
000056  dd02              BLE      |L1.94|
;;;124    		{
;;;125    			rc = -1;
000058  f04f37ff          MOV      r7,#0xffffffff
;;;126    			goto exit;
00005c  e00b              B        |L1.118|
                  |L1.94|
;;;127    		}
;;;128    		grantedQoSs[(*count)++] = readChar(&curdata);
00005e  4668              MOV      r0,sp
000060  f7fffffe          BL       readChar
000064  6821              LDR      r1,[r4,#0]
000066  008a              LSLS     r2,r1,#2
000068  1c49              ADDS     r1,r1,#1
00006a  6021              STR      r1,[r4,#0]
00006c  50b0              STR      r0,[r6,r2]
                  |L1.110|
00006e  9800              LDR      r0,[sp,#0]            ;121
000070  42a8              CMP      r0,r5                 ;121
000072  d3ee              BCC      |L1.82|
;;;129    	}
;;;130    
;;;131    	rc = 1;
000074  2701              MOVS     r7,#1
                  |L1.118|
;;;132    exit:
;;;133    	FUNC_EXIT_RC(rc);
;;;134    	return rc;
000076  4638              MOV      r0,r7
;;;135    }
000078  e8bd87fc          POP      {r2-r10,pc}
;;;136    
                          ENDP


                          AREA ||i.MQTTSerialize_subscribe||, CODE, READONLY, ALIGN=1

                  MQTTSerialize_subscribe PROC
;;;49       */
;;;50     int MQTTSerialize_subscribe(unsigned char* buf, int buflen, unsigned char dup, unsigned short packetid, int count,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;51     		MQTTString topicFilters[], int requestedQoSs[])
;;;52     {
000004  b083              SUB      sp,sp,#0xc
000006  468a              MOV      r10,r1
000008  e9dd8710          LDRD     r8,r7,[sp,#0x40]
00000c  4606              MOV      r6,r0
;;;53     	unsigned char *ptr = buf;
;;;54     	MQTTHeader header = {0};
00000e  2500              MOVS     r5,#0
;;;55     	int rem_len = 0;
;;;56     	int rc = 0;
;;;57     	int i = 0;
;;;58     
;;;59     	FUNC_ENTRY;
;;;60     	if (MQTTPacket_len(rem_len = MQTTSerialize_subscribeLength(count, topicFilters)) > buflen)
000010  9001              STR      r0,[sp,#4]
000012  4693              MOV      r11,r2                ;52
000014  f8dd9048          LDR      r9,[sp,#0x48]         ;53
000018  462c              MOV      r4,r5                 ;57
00001a  4639              MOV      r1,r7
00001c  4640              MOV      r0,r8
00001e  f7fffffe          BL       MQTTSerialize_subscribeLength
000022  9000              STR      r0,[sp,#0]
000024  f7fffffe          BL       MQTTPacket_len
000028  4550              CMP      r0,r10
00002a  dd03              BLE      |L2.52|
;;;61     	{
;;;62     		rc = MQTTPACKET_BUFFER_TOO_SHORT;
00002c  1ea8              SUBS     r0,r5,#2
                  |L2.46|
;;;63     		goto exit;
;;;64     	}
;;;65     
;;;66     	header.byte = 0;
;;;67     	header.bits.type = SUBSCRIBE;
;;;68     	header.bits.dup = dup;
;;;69     	header.bits.qos = 1;
;;;70     	writeChar(&ptr, header.byte); /* write header */
;;;71     
;;;72     	ptr += MQTTPacket_encode(ptr, rem_len); /* write remaining length */;
;;;73     
;;;74     	writeInt(&ptr, packetid);
;;;75     
;;;76     	for (i = 0; i < count; ++i)
;;;77     	{
;;;78     		writeMQTTString(&ptr, topicFilters[i]);
;;;79     		writeChar(&ptr, requestedQoSs[i]);
;;;80     	}
;;;81     
;;;82     	rc = ptr - buf;
;;;83     exit:
;;;84     	FUNC_EXIT_RC(rc);
;;;85     	return rc;
;;;86     }
00002e  b007              ADD      sp,sp,#0x1c
000030  e8bd8ff0          POP      {r4-r11,pc}
                  |L2.52|
000034  f3650507          BFI      r5,r5,#0,#8
000038  3580              ADDS     r5,r5,#0x80
00003a  f36b05c3          BFI      r5,r11,#3,#1          ;68
00003e  f0250006          BIC      r0,r5,#6              ;69
000042  1c80              ADDS     r0,r0,#2              ;69
000044  b241              SXTB     r1,r0                 ;69
000046  a801              ADD      r0,sp,#4              ;70
000048  f7fffffe          BL       writeChar
00004c  e9dd1000          LDRD     r1,r0,[sp,#0]         ;70
000050  f7fffffe          BL       MQTTPacket_encode
000054  9901              LDR      r1,[sp,#4]            ;72
000056  4408              ADD      r0,r0,r1              ;72
000058  9001              STR      r0,[sp,#4]            ;74
00005a  a801              ADD      r0,sp,#4              ;74
00005c  9906              LDR      r1,[sp,#0x18]         ;74
00005e  f7fffffe          BL       writeInt
000062  e00f              B        |L2.132|
                  |L2.100|
000064  eb040044          ADD      r0,r4,r4,LSL #1       ;78
000068  eb070580          ADD      r5,r7,r0,LSL #2       ;78
00006c  a801              ADD      r0,sp,#4              ;78
00006e  e895000e          LDM      r5,{r1-r3}            ;78
000072  f7fffffe          BL       writeMQTTString
000076  f8190024          LDRB     r0,[r9,r4,LSL #2]     ;79
00007a  b241              SXTB     r1,r0                 ;79
00007c  a801              ADD      r0,sp,#4              ;79
00007e  f7fffffe          BL       writeChar
000082  1c64              ADDS     r4,r4,#1              ;79
                  |L2.132|
000084  4544              CMP      r4,r8                 ;76
000086  dbed              BLT      |L2.100|
000088  9801              LDR      r0,[sp,#4]            ;82
00008a  1b80              SUBS     r0,r0,r6              ;82
00008c  e7cf              B        |L2.46|
;;;87     
                          ENDP


                          AREA ||i.MQTTSerialize_subscribeLength||, CODE, READONLY, ALIGN=1

                  MQTTSerialize_subscribeLength PROC
;;;27       */
;;;28     int MQTTSerialize_subscribeLength(int count, MQTTString topicFilters[])
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;29     {
;;;30     	int i;
;;;31     	int len = 2; /* packetid */
000004  2502              MOVS     r5,#2
000006  460e              MOV      r6,r1                 ;29
000008  4607              MOV      r7,r0                 ;29
;;;32     
;;;33     	for (i = 0; i < count; ++i)
00000a  2400              MOVS     r4,#0
00000c  e009              B        |L3.34|
                  |L3.14|
;;;34     		len += 2 + MQTTstrlen(topicFilters[i]) + 1; /* length + topic + req_qos */
00000e  eb040044          ADD      r0,r4,r4,LSL #1
000012  eb060080          ADD      r0,r6,r0,LSL #2
000016  c807              LDM      r0,{r0-r2}
000018  f7fffffe          BL       MQTTstrlen
00001c  4405              ADD      r5,r5,r0
00001e  1c64              ADDS     r4,r4,#1
000020  1ced              ADDS     r5,r5,#3
                  |L3.34|
000022  42bc              CMP      r4,r7                 ;33
000024  dbf3              BLT      |L3.14|
;;;35     	return len;
000026  4628              MOV      r0,r5
;;;36     }
000028  e8bd81f0          POP      {r4-r8,pc}
;;;37     
                          ENDP

