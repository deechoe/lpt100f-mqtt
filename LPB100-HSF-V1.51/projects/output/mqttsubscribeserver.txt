; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\mqttsubscribeserver.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\mqttsubscribeserver.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931,494 -I..\sdk\1.51\include -I..\..\usr -I..\..\mqtt -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -D__KEIL_MDK__ -D__LPT100F__ --enum_is_int --signed_chars --omf_browse=.\output\mqttsubscribeserver.crf ..\..\mqtt\MQTTSubscribeServer.c]
                          THUMB

                          AREA ||i.MQTTDeserialize_subscribe||, CODE, READONLY, ALIGN=1

                  MQTTDeserialize_subscribe PROC
;;;34       */
;;;35     int MQTTDeserialize_subscribe(unsigned char* dup, unsigned short* packetid, int maxcount, int* count, MQTTString topicFilters[],
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;36     	int requestedQoSs[], unsigned char* buf, int buflen)
;;;37     {
000004  4682              MOV      r10,r0
000006  e9dd700d          LDRD     r7,r0,[sp,#0x34]
;;;38     	MQTTHeader header = {0};
00000a  f04f0900          MOV      r9,#0
;;;39     	unsigned char* curdata = buf;
;;;40     	unsigned char* enddata = NULL;
;;;41     	int rc = -1;
00000e  e9cd0900          STRD     r0,r9,[sp,#0]
000012  461c              MOV      r4,r3                 ;37
000014  468b              MOV      r11,r1                ;37
000016  464d              MOV      r5,r9                 ;38
000018  f04f36ff          MOV      r6,#0xffffffff
00001c  f8dd8030          LDR      r8,[sp,#0x30]
;;;42     	int mylen = 0;
;;;43     
;;;44     	FUNC_ENTRY;
;;;45     	header.byte = readChar(&curdata);
000020  4668              MOV      r0,sp
000022  f7fffffe          BL       readChar
000026  f3600507          BFI      r5,r0,#0,#8
;;;46     	if (header.bits.type != SUBSCRIBE)
00002a  0928              LSRS     r0,r5,#4
00002c  2808              CMP      r0,#8
00002e  d12f              BNE      |L1.144|
;;;47     		goto exit;
;;;48     	*dup = header.bits.dup;
000030  f3c501c0          UBFX     r1,r5,#3,#1
000034  f88a1000          STRB     r1,[r10,#0]
;;;49     
;;;50     	curdata += (rc = MQTTPacket_decodeBuf(curdata, &mylen)); /* read remaining length */
000038  a901              ADD      r1,sp,#4
00003a  9800              LDR      r0,[sp,#0]
00003c  f7fffffe          BL       MQTTPacket_decodeBuf
000040  9900              LDR      r1,[sp,#0]
000042  4606              MOV      r6,r0
000044  4408              ADD      r0,r0,r1
;;;51     	enddata = curdata + mylen;
000046  9901              LDR      r1,[sp,#4]
000048  9000              STR      r0,[sp,#0]
00004a  1845              ADDS     r5,r0,r1
;;;52     
;;;53     	*packetid = readInt(&curdata);
00004c  4668              MOV      r0,sp
00004e  f7fffffe          BL       readInt
000052  f8ab0000          STRH     r0,[r11,#0]
;;;54     
;;;55     	*count = 0;
;;;56     	while (curdata < enddata)
000056  f8c49000          STR      r9,[r4,#0]
00005a  e015              B        |L1.136|
                  |L1.92|
;;;57     	{
;;;58     		if (!readMQTTLenString(&topicFilters[*count], &curdata, enddata))
00005c  6820              LDR      r0,[r4,#0]
00005e  462a              MOV      r2,r5
000060  eb000140          ADD      r1,r0,r0,LSL #1
000064  eb080081          ADD      r0,r8,r1,LSL #2
000068  4669              MOV      r1,sp
00006a  f7fffffe          BL       readMQTTLenString
00006e  b178              CBZ      r0,|L1.144|
;;;59     			goto exit;
;;;60     		if (curdata >= enddata) /* do we have enough data to read the req_qos version byte? */
000070  9800              LDR      r0,[sp,#0]
000072  42a8              CMP      r0,r5
000074  d20c              BCS      |L1.144|
;;;61     			goto exit;
;;;62     		requestedQoSs[*count] = readChar(&curdata);
000076  4668              MOV      r0,sp
000078  f7fffffe          BL       readChar
00007c  6821              LDR      r1,[r4,#0]
00007e  f8470021          STR      r0,[r7,r1,LSL #2]
;;;63     		(*count)++;
000082  6820              LDR      r0,[r4,#0]
000084  1c40              ADDS     r0,r0,#1
000086  6020              STR      r0,[r4,#0]
                  |L1.136|
000088  9800              LDR      r0,[sp,#0]            ;56
00008a  42a8              CMP      r0,r5                 ;56
00008c  d3e6              BCC      |L1.92|
;;;64     	}
;;;65     
;;;66     	rc = 1;
00008e  2601              MOVS     r6,#1
                  |L1.144|
;;;67     exit:
;;;68     	FUNC_EXIT_RC(rc);
;;;69     	return rc;
000090  4630              MOV      r0,r6
;;;70     }
000092  e8bd9ffc          POP      {r2-r12,pc}
;;;71     
                          ENDP


                          AREA ||i.MQTTSerialize_suback||, CODE, READONLY, ALIGN=1

                  MQTTSerialize_suback PROC
;;;81       */
;;;82     int MQTTSerialize_suback(unsigned char* buf, int buflen, unsigned short packetid, int count, int* grantedQoSs)
000000  b5f8              PUSH     {r3-r7,lr}
;;;83     {
000002  4606              MOV      r6,r0
000004  461d              MOV      r5,r3
;;;84     	MQTTHeader header = {0};
000006  2000              MOVS     r0,#0
;;;85     	int rc = -1;
;;;86     	unsigned char *ptr = buf;
000008  9f06              LDR      r7,[sp,#0x18]
;;;87     	int i;
;;;88     
;;;89     	FUNC_ENTRY;
;;;90     	if (buflen < 2 + count)
00000a  1c9b              ADDS     r3,r3,#2
00000c  4614              MOV      r4,r2                 ;83
00000e  9600              STR      r6,[sp,#0]
000010  4299              CMP      r1,r3
000012  da01              BGE      |L2.24|
;;;91     	{
;;;92     		rc = MQTTPACKET_BUFFER_TOO_SHORT;
000014  1e80              SUBS     r0,r0,#2
;;;93     		goto exit;
;;;94     	}
;;;95     	header.byte = 0;
;;;96     	header.bits.type = SUBACK;
;;;97     	writeChar(&ptr, header.byte); /* write header */
;;;98     
;;;99     	ptr += MQTTPacket_encode(ptr, 2 + count); /* write remaining length */
;;;100    
;;;101    	writeInt(&ptr, packetid);
;;;102    
;;;103    	for (i = 0; i < count; ++i)
;;;104    		writeChar(&ptr, grantedQoSs[i]);
;;;105    
;;;106    	rc = ptr - buf;
;;;107    exit:
;;;108    	FUNC_EXIT_RC(rc);
;;;109    	return rc;
;;;110    }
000016  bdf8              POP      {r3-r7,pc}
                  |L2.24|
000018  f3600007          BFI      r0,r0,#0,#8
00001c  3090              ADDS     r0,r0,#0x90
00001e  b241              SXTB     r1,r0
000020  4668              MOV      r0,sp                 ;97
000022  f7fffffe          BL       writeChar
000026  1ca9              ADDS     r1,r5,#2              ;99
000028  9800              LDR      r0,[sp,#0]            ;99
00002a  f7fffffe          BL       MQTTPacket_encode
00002e  9900              LDR      r1,[sp,#0]            ;99
000030  4408              ADD      r0,r0,r1              ;99
000032  9000              STR      r0,[sp,#0]            ;101
000034  4621              MOV      r1,r4                 ;101
000036  4668              MOV      r0,sp                 ;101
000038  f7fffffe          BL       writeInt
00003c  2400              MOVS     r4,#0                 ;103
00003e  e006              B        |L2.78|
                  |L2.64|
000040  f8170024          LDRB     r0,[r7,r4,LSL #2]     ;104
000044  b241              SXTB     r1,r0                 ;104
000046  4668              MOV      r0,sp                 ;104
000048  f7fffffe          BL       writeChar
00004c  1c64              ADDS     r4,r4,#1              ;104
                  |L2.78|
00004e  42ac              CMP      r4,r5                 ;103
000050  dbf6              BLT      |L2.64|
000052  9800              LDR      r0,[sp,#0]            ;106
000054  1b80              SUBS     r0,r0,r6              ;106
000056  bdf8              POP      {r3-r7,pc}
;;;111    
                          ENDP

