; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\mqttdeserializepublish.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\mqttdeserializepublish.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931,494 -I..\sdk\1.51\include -I..\..\usr -I..\..\mqtt -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -D__KEIL_MDK__ -D__LPT100F__ --enum_is_int --signed_chars --omf_browse=.\output\mqttdeserializepublish.crf ..\..\mqtt\MQTTDeserializePublish.c]
                          THUMB

                          AREA ||i.MQTTDeserialize_ack||, CODE, READONLY, ALIGN=1

                  MQTTDeserialize_ack PROC
;;;81       */
;;;82     int MQTTDeserialize_ack(unsigned char* packettype, unsigned char* dup, unsigned short* packetid, unsigned char* buf, int buflen)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;83     {
000004  4607              MOV      r7,r0
000006  4615              MOV      r5,r2
000008  460e              MOV      r6,r1
;;;84     	MQTTHeader header = {0};
00000a  2400              MOVS     r4,#0
;;;85     	unsigned char* curdata = buf;
;;;86     	unsigned char* enddata = NULL;
;;;87     	int rc = 0;
;;;88     	int mylen;
;;;89     
;;;90     	FUNC_ENTRY;
;;;91     	header.byte = readChar(&curdata);
00000c  4668              MOV      r0,sp
00000e  9300              STR      r3,[sp,#0]
000010  f7fffffe          BL       readChar
000014  f3600407          BFI      r4,r0,#0,#8
;;;92     	*dup = header.bits.dup;
000018  f3c400c0          UBFX     r0,r4,#3,#1
00001c  7030              STRB     r0,[r6,#0]
;;;93     	*packettype = header.bits.type;
00001e  0920              LSRS     r0,r4,#4
000020  7038              STRB     r0,[r7,#0]
;;;94     
;;;95     	curdata += (rc = MQTTPacket_decodeBuf(curdata, &mylen)); /* read remaining length */
000022  a901              ADD      r1,sp,#4
000024  9800              LDR      r0,[sp,#0]
000026  f7fffffe          BL       MQTTPacket_decodeBuf
00002a  9900              LDR      r1,[sp,#0]
;;;96     	enddata = curdata + mylen;
00002c  9a01              LDR      r2,[sp,#4]
00002e  4401              ADD      r1,r1,r0              ;95
000030  9100              STR      r1,[sp,#0]
000032  440a              ADD      r2,r2,r1
;;;97     
;;;98     	if (enddata - curdata < 2)
000034  1a51              SUBS     r1,r2,r1
000036  2902              CMP      r1,#2
000038  db04              BLT      |L1.68|
;;;99     		goto exit;
;;;100    	*packetid = readInt(&curdata);
00003a  4668              MOV      r0,sp
00003c  f7fffffe          BL       readInt
000040  8028              STRH     r0,[r5,#0]
;;;101    
;;;102    	rc = 1;
000042  2001              MOVS     r0,#1
                  |L1.68|
;;;103    exit:
;;;104    	FUNC_EXIT_RC(rc);
;;;105    	return rc;
;;;106    }
000044  e8bd81fc          POP      {r2-r8,pc}
;;;107    
                          ENDP


                          AREA ||i.MQTTDeserialize_publish||, CODE, READONLY, ALIGN=1

                  MQTTDeserialize_publish PROC
;;;35       */
;;;36     int MQTTDeserialize_publish(unsigned char* dup, int* qos, unsigned char* retained, unsigned short* packetid, MQTTString* topicName,
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;37     		unsigned char** payload, int* payloadlen, unsigned char* buf, int buflen)
;;;38     {
000004  4680              MOV      r8,r0
000006  e9dda00e          LDRD     r10,r0,[sp,#0x38]
;;;39     	MQTTHeader header = {0};
00000a  2400              MOVS     r4,#0
;;;40     	unsigned char* curdata = buf;
;;;41     	unsigned char* enddata = NULL;
;;;42     	int rc = 0;
00000c  e9cd0400          STRD     r0,r4,[sp,#0]
000010  4699              MOV      r9,r3                 ;38
000012  4617              MOV      r7,r2                 ;38
000014  460e              MOV      r6,r1                 ;38
000016  4625              MOV      r5,r4
000018  f8ddb034          LDR      r11,[sp,#0x34]
;;;43     	int mylen = 0;
;;;44     
;;;45     	FUNC_ENTRY;
;;;46     	header.byte = readChar(&curdata);
00001c  4668              MOV      r0,sp
00001e  f7fffffe          BL       readChar
000022  f3600407          BFI      r4,r0,#0,#8
;;;47     	if (header.bits.type != PUBLISH)
000026  0920              LSRS     r0,r4,#4
000028  2803              CMP      r0,#3
00002a  d12c              BNE      |L2.134|
;;;48     		goto exit;
;;;49     	*dup = header.bits.dup;
00002c  f3c401c0          UBFX     r1,r4,#3,#1
000030  f8881000          STRB     r1,[r8,#0]
;;;50     	*qos = header.bits.qos;
000034  f3c40041          UBFX     r0,r4,#1,#2
;;;51     	*retained = header.bits.retain;
000038  6030              STR      r0,[r6,#0]
00003a  f0040001          AND      r0,r4,#1
00003e  7038              STRB     r0,[r7,#0]
;;;52     
;;;53     	curdata += (rc = MQTTPacket_decodeBuf(curdata, &mylen)); /* read remaining length */
000040  a901              ADD      r1,sp,#4
000042  9800              LDR      r0,[sp,#0]
000044  f7fffffe          BL       MQTTPacket_decodeBuf
000048  9900              LDR      r1,[sp,#0]
00004a  4605              MOV      r5,r0
00004c  4408              ADD      r0,r0,r1
;;;54     	enddata = curdata + mylen;
00004e  9901              LDR      r1,[sp,#4]
000050  9000              STR      r0,[sp,#0]
000052  1844              ADDS     r4,r0,r1
;;;55     
;;;56     	if (!readMQTTLenString(topicName, &curdata, enddata) ||
000054  4622              MOV      r2,r4
000056  4669              MOV      r1,sp
000058  980c              LDR      r0,[sp,#0x30]
00005a  f7fffffe          BL       readMQTTLenString
00005e  b190              CBZ      r0,|L2.134|
;;;57     		enddata - curdata < 0) /* do we have enough data to read the protocol version byte? */
000060  9800              LDR      r0,[sp,#0]
000062  1a20              SUBS     r0,r4,r0
000064  d40f              BMI      |L2.134|
;;;58     		goto exit;
;;;59     
;;;60     	if (*qos > 0)
000066  6830              LDR      r0,[r6,#0]
000068  2800              CMP      r0,#0
00006a  dd04              BLE      |L2.118|
;;;61     		*packetid = readInt(&curdata);
00006c  4668              MOV      r0,sp
00006e  f7fffffe          BL       readInt
000072  f8a90000          STRH     r0,[r9,#0]
                  |L2.118|
;;;62     
;;;63     	*payloadlen = enddata - curdata;
000076  9800              LDR      r0,[sp,#0]
000078  1a21              SUBS     r1,r4,r0
;;;64     	*payload = curdata;
00007a  f8ca1000          STR      r1,[r10,#0]
00007e  9900              LDR      r1,[sp,#0]
;;;65     	rc = 1;
000080  2501              MOVS     r5,#1
000082  f8cb1000          STR      r1,[r11,#0]
                  |L2.134|
;;;66     exit:
;;;67     	FUNC_EXIT_RC(rc);
;;;68     	return rc;
000086  4628              MOV      r0,r5
;;;69     }
000088  e8bd9ffc          POP      {r2-r12,pc}
;;;70     
                          ENDP

