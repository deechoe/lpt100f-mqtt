; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\output\usr.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\usr.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931,494 -I..\sdk\1.51\include -I..\..\usr -I..\..\mqtt -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=523 -D__KEIL_MDK__ -D__LPT100F__ --enum_is_int --signed_chars --omf_browse=.\output\usr.crf ..\..\usr\usr.c]
                          THUMB

                          AREA ||i.HexStrToByte||, CODE, READONLY, ALIGN=1

                  HexStrToByte PROC
;;;249    /// </summary>
;;;250    void HexStrToByte(const char* source, unsigned char* dest, int sourceLen)  
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;251    {  
000004  4617              MOV      r7,r2
000006  4688              MOV      r8,r1
000008  4606              MOV      r6,r0
;;;252        short i;  
;;;253        unsigned char highByte, lowByte;  
;;;254          
;;;255        for (i = 0; i < sourceLen; i += 2)  
00000a  2400              MOVS     r4,#0
00000c  e01e              B        |L1.76|
                  |L1.14|
;;;256        {  
;;;257            highByte = toupper(source[i]);  
00000e  5730              LDRSB    r0,[r6,r4]
000010  f7fffffe          BL       toupper
000014  b2c5              UXTB     r5,r0
;;;258            lowByte  = toupper(source[i + 1]);  
000016  1930              ADDS     r0,r6,r4
000018  f9900001          LDRSB    r0,[r0,#1]
00001c  f7fffffe          BL       toupper
000020  b2c0              UXTB     r0,r0
;;;259            if (highByte > 0x39)  
000022  2d39              CMP      r5,#0x39
000024  d901              BLS      |L1.42|
000026  3d37              SUBS     r5,r5,#0x37
;;;260                highByte -= 0x37;  
000028  e000              B        |L1.44|
                  |L1.42|
00002a  3d30              SUBS     r5,r5,#0x30
                  |L1.44|
;;;261            else  
;;;262                highByte -= 0x30;  
00002c  b2e9              UXTB     r1,r5
;;;263            if (lowByte > 0x39)  
00002e  2839              CMP      r0,#0x39
000030  d901              BLS      |L1.54|
000032  3837              SUBS     r0,r0,#0x37
;;;264                lowByte -= 0x37;  
000034  e000              B        |L1.56|
                  |L1.54|
000036  3830              SUBS     r0,r0,#0x30
                  |L1.56|
;;;265            else  
;;;266                lowByte -= 0x30;  
000038  b2c0              UXTB     r0,r0
;;;267            dest[i / 2] = (highByte << 4) | lowByte;  
00003a  eb0472d4          ADD      r2,r4,r4,LSR #31
00003e  ea401001          ORR      r0,r0,r1,LSL #4
000042  eb080162          ADD      r1,r8,r2,ASR #1
000046  1ca4              ADDS     r4,r4,#2
000048  7008              STRB     r0,[r1,#0]
00004a  b224              SXTH     r4,r4                 ;255
                  |L1.76|
00004c  42bc              CMP      r4,r7                 ;255
00004e  dbde              BLT      |L1.14|
;;;268        }  
;;;269        return ;  
;;;270    }  
000050  e8bd81f0          POP      {r4-r8,pc}
;;;271    
                          ENDP


                          AREA ||i.connect_to_router||, CODE, READONLY, ALIGN=2

                  connect_to_router PROC
;;;39     /// </summary>
;;;40     int connect_to_router(void)
000000  b510              PUSH     {r4,lr}
;;;41     {
000002  b096              SUB      sp,sp,#0x58
;;;42     	char *words[6]={NULL};
000004  2118              MOVS     r1,#0x18
000006  a810              ADD      r0,sp,#0x40
000008  f7fffffe          BL       __aeabi_memclr4
;;;43     	char rsp[64]={0};
00000c  2140              MOVS     r1,#0x40
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memclr4
;;;44     	hfat_send_cmd("AT+WSSSID=fengwen_test\r\n",sizeof("AT+WSSSID=fengwen_test\r\n"),rsp,64);
000014  2340              MOVS     r3,#0x40
000016  466a              MOV      r2,sp
000018  2119              MOVS     r1,#0x19
00001a  a017              ADR      r0,|L2.120|
00001c  f7fffffe          BL       hfat_send_cmd
;;;45     	if(hfat_get_words(rsp,words, 2)>0)
000020  2202              MOVS     r2,#2
000022  a910              ADD      r1,sp,#0x40
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       hfat_get_words
;;;46     	{
;;;47     		if(0!=strncmp(words[0],"ok",strlen("ok")))
;;;48     		{
;;;49     		  return -1;
00002a  f04f34ff          MOV      r4,#0xffffffff
00002e  2800              CMP      r0,#0                 ;45
000030  dd05              BLE      |L2.62|
000032  2202              MOVS     r2,#2                 ;47
000034  a117              ADR      r1,|L2.148|
000036  9810              LDR      r0,[sp,#0x40]         ;47
000038  f7fffffe          BL       strncmp
00003c  b9b0              CBNZ     r0,|L2.108|
                  |L2.62|
;;;50     		}
;;;51     	}	
;;;52       memset(rsp,0x00,sizeof(rsp));
00003e  2140              MOVS     r1,#0x40
000040  4668              MOV      r0,sp
000042  f7fffffe          BL       __aeabi_memclr4
;;;53     	hfat_send_cmd("AT+WSKEY=WPA2PSK,AES,1234567890\r\n",sizeof("AT+WSKEY=WPA2PSK,AES,1234567890\r\n"),rsp,64);
000046  2340              MOVS     r3,#0x40
000048  466a              MOV      r2,sp
00004a  2122              MOVS     r1,#0x22
00004c  a012              ADR      r0,|L2.152|
00004e  f7fffffe          BL       hfat_send_cmd
;;;54     	if(hfat_get_words(rsp,words, 2)>0)
000052  2202              MOVS     r2,#2
000054  a910              ADD      r1,sp,#0x40
000056  4668              MOV      r0,sp
000058  f7fffffe          BL       hfat_get_words
00005c  2800              CMP      r0,#0
00005e  dd08              BLE      |L2.114|
;;;55     	{
;;;56     		if(0!=strncmp(words[0],"ok",strlen("ok")))
000060  2202              MOVS     r2,#2
000062  a10c              ADR      r1,|L2.148|
000064  9810              LDR      r0,[sp,#0x40]
000066  f7fffffe          BL       strncmp
00006a  b110              CBZ      r0,|L2.114|
                  |L2.108|
;;;57     		{
;;;58     		  return -1;
00006c  4620              MOV      r0,r4
                  |L2.110|
;;;59     		}
;;;60     	}	
;;;61       return 0;	
;;;62     }
00006e  b016              ADD      sp,sp,#0x58
000070  bd10              POP      {r4,pc}
                  |L2.114|
000072  2000              MOVS     r0,#0                 ;61
000074  e7fb              B        |L2.110|
;;;63     /// <summary>
                          ENDP

000076  0000              DCW      0x0000
                  |L2.120|
000078  41542b57          DCB      "AT+WSSSID=fengwen_test\r\n",0
00007c  53535349
000080  443d6665
000084  6e677765
000088  6e5f7465
00008c  73740d0a
000090  00      
000091  00                DCB      0
000092  00                DCB      0
000093  00                DCB      0
                  |L2.148|
000094  6f6b00            DCB      "ok",0
000097  00                DCB      0
                  |L2.152|
000098  41542b57          DCB      "AT+WSKEY=WPA2PSK,AES,1234567890\r\n",0
00009c  534b4559
0000a0  3d575041
0000a4  3250534b
0000a8  2c414553
0000ac  2c313233
0000b0  34353637
0000b4  3839300d
0000b8  0a00    
0000ba  00                DCB      0
0000bb  00                DCB      0

                          AREA ||i.connect_to_server||, CODE, READONLY, ALIGN=2

                  connect_to_server PROC
;;;153    /// </summary>
;;;154    int connect_to_server(void)
000000  b500              PUSH     {lr}
;;;155    {
000002  b097              SUB      sp,sp,#0x5c
;;;156      char *words[6]={NULL};
000004  2118              MOVS     r1,#0x18
000006  a810              ADD      r0,sp,#0x40
000008  f7fffffe          BL       __aeabi_memclr4
;;;157    	char rsp[64]={0};
00000c  2140              MOVS     r1,#0x40
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memclr4
;;;158    	hfat_send_cmd("AT+SOCKB=TCP,12345,192.168.1.110\r\n",sizeof("AT+SOCKB=TCP,12345,192.168.1.110\r\n"),rsp,64);
000014  2340              MOVS     r3,#0x40
000016  466a              MOV      r2,sp
000018  2123              MOVS     r1,#0x23
00001a  a00a              ADR      r0,|L3.68|
00001c  f7fffffe          BL       hfat_send_cmd
;;;159    	if(hfat_get_words(rsp,words, 2)>0)
000020  2202              MOVS     r2,#2
000022  a910              ADD      r1,sp,#0x40
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       hfat_get_words
00002a  2800              CMP      r0,#0
00002c  dd06              BLE      |L3.60|
;;;160    	{
;;;161    		if(0==strncmp(words[0],"ok",strlen("ok")))
00002e  2202              MOVS     r2,#2
000030  a10d              ADR      r1,|L3.104|
000032  9810              LDR      r0,[sp,#0x40]
000034  f7fffffe          BL       strncmp
000038  2800              CMP      r0,#0
00003a  d001              BEQ      |L3.64|
                  |L3.60|
;;;162    		{
;;;163    		  return 0;
;;;164    		}
;;;165    	}	
;;;166    	return -1;	
00003c  f04f30ff          MOV      r0,#0xffffffff
                  |L3.64|
;;;167    }
000040  b017              ADD      sp,sp,#0x5c
000042  bd00              POP      {pc}
;;;168    /// <summary>
                          ENDP

                  |L3.68|
000044  41542b53          DCB      "AT+SOCKB=TCP,12345,192.168.1.110\r\n",0
000048  4f434b42
00004c  3d544350
000050  2c313233
000054  34352c31
000058  39322e31
00005c  36382e31
000060  2e313130
000064  0d0a00  
000067  00                DCB      0
                  |L3.104|
000068  6f6b00            DCB      "ok",0
00006b  00                DCB      0

                          AREA ||i.enter_throut_mode||, CODE, READONLY, ALIGN=2

                  enter_throut_mode PROC
;;;188    /// </summary>
;;;189    int enter_throut_mode(void)
000000  b500              PUSH     {lr}
;;;190    {
000002  b097              SUB      sp,sp,#0x5c
;;;191      char *words[6]={NULL};
000004  2118              MOVS     r1,#0x18
000006  a810              ADD      r0,sp,#0x40
000008  f7fffffe          BL       __aeabi_memclr4
;;;192    	char rsp[64]={0};
00000c  2140              MOVS     r1,#0x40
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memclr4
;;;193    	hfat_send_cmd("AT+ENTM\r\n",sizeof("AT+ENTM\r\n"),rsp,64);
000014  2340              MOVS     r3,#0x40
000016  466a              MOV      r2,sp
000018  210a              MOVS     r1,#0xa
00001a  a00a              ADR      r0,|L4.68|
00001c  f7fffffe          BL       hfat_send_cmd
;;;194    	if(hfat_get_words(rsp,words, 3)>0)
000020  2203              MOVS     r2,#3
000022  a910              ADD      r1,sp,#0x40
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       hfat_get_words
00002a  2800              CMP      r0,#0
00002c  dd06              BLE      |L4.60|
;;;195    	{
;;;196    		if(0==strncmp(words[0],"ok",strlen("ok")))
00002e  2202              MOVS     r2,#2
000030  a107              ADR      r1,|L4.80|
000032  9810              LDR      r0,[sp,#0x40]
000034  f7fffffe          BL       strncmp
000038  2800              CMP      r0,#0
00003a  d001              BEQ      |L4.64|
                  |L4.60|
;;;197    		{
;;;198    		  return 0;
;;;199    		}
;;;200    	}	
;;;201    	return -1;	
00003c  f04f30ff          MOV      r0,#0xffffffff
                  |L4.64|
;;;202    }
000040  b017              ADD      sp,sp,#0x5c
000042  bd00              POP      {pc}
;;;203    /// <summary>
                          ENDP

                  |L4.68|
000044  41542b45          DCB      "AT+ENTM\r\n",0
000048  4e544d0d
00004c  0a00    
00004e  00                DCB      0
00004f  00                DCB      0
                  |L4.80|
000050  6f6b00            DCB      "ok",0
000053  00                DCB      0

                          AREA ||i.get_sta_mac||, CODE, READONLY, ALIGN=2

                  get_sta_mac PROC
;;;170    /// </summary>
;;;171    int get_sta_mac(void)
000000  b500              PUSH     {lr}
;;;172    {
000002  b097              SUB      sp,sp,#0x5c
;;;173      char *words[6]={NULL};
000004  2118              MOVS     r1,#0x18
000006  a810              ADD      r0,sp,#0x40
000008  f7fffffe          BL       __aeabi_memclr4
;;;174    	char rsp[64]={0};
00000c  2140              MOVS     r1,#0x40
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memclr4
;;;175    	hfat_send_cmd("AT+WSMAC\r\n",sizeof("AAT+WSMAC\r\n"),rsp,64);
000014  2340              MOVS     r3,#0x40
000016  466a              MOV      r2,sp
000018  210c              MOVS     r1,#0xc
00001a  a00d              ADR      r0,|L5.80|
00001c  f7fffffe          BL       hfat_send_cmd
;;;176    	if(hfat_get_words(rsp,words, 3)>0)
000020  2203              MOVS     r2,#3
000022  a910              ADD      r1,sp,#0x40
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       hfat_get_words
00002a  2800              CMP      r0,#0
00002c  dd05              BLE      |L5.58|
;;;177    	{
;;;178    		if(0==strncmp(words[0],"ok",strlen("ok")))
00002e  2202              MOVS     r2,#2
000030  a10a              ADR      r1,|L5.92|
000032  9810              LDR      r0,[sp,#0x40]
000034  f7fffffe          BL       strncmp
000038  b118              CBZ      r0,|L5.66|
                  |L5.58|
;;;179    		{
;;;180    			HexStrToByte(words[1],sta_mac,12);
;;;181    		  return 0;
;;;182    		}
;;;183    	}	
;;;184    	return -1;	
00003a  f04f30ff          MOV      r0,#0xffffffff
                  |L5.62|
;;;185    }
00003e  b017              ADD      sp,sp,#0x5c
000040  bd00              POP      {pc}
                  |L5.66|
000042  220c              MOVS     r2,#0xc               ;180
000044  4906              LDR      r1,|L5.96|
000046  9811              LDR      r0,[sp,#0x44]         ;180
000048  f7fffffe          BL       HexStrToByte
00004c  2000              MOVS     r0,#0                 ;181
00004e  e7f6              B        |L5.62|
;;;186    /// <summary>
                          ENDP

                  |L5.80|
000050  41542b57          DCB      "AT+WSMAC\r\n",0
000054  534d4143
000058  0d0a00  
00005b  00                DCB      0
                  |L5.92|
00005c  6f6b00            DCB      "ok",0
00005f  00                DCB      0
                  |L5.96|
                          DCD      ||.data||

                          AREA ||i.get_work_mode||, CODE, READONLY, ALIGN=2

                  get_work_mode PROC
;;;119    /// </summary>
;;;120    int get_work_mode(void)
000000  b500              PUSH     {lr}
;;;121    {
000002  b097              SUB      sp,sp,#0x5c
;;;122    	char *words[6]={NULL};
000004  2118              MOVS     r1,#0x18
000006  a810              ADD      r0,sp,#0x40
000008  f7fffffe          BL       __aeabi_memclr4
;;;123    	char rsp[64]={0};
00000c  2140              MOVS     r1,#0x40
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memclr4
;;;124    	hfat_send_cmd("AT+WMODE\r\n",sizeof("AT+WMODE\r\n"),rsp,64);
000014  2340              MOVS     r3,#0x40
000016  466a              MOV      r2,sp
000018  210b              MOVS     r1,#0xb
00001a  a00d              ADR      r0,|L6.80|
00001c  f7fffffe          BL       hfat_send_cmd
;;;125    	if(hfat_get_words(rsp,words, 3)>0)
000020  2203              MOVS     r2,#3
000022  a910              ADD      r1,sp,#0x40
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       hfat_get_words
00002a  2800              CMP      r0,#0
00002c  dd0c              BLE      |L6.72|
;;;126    	{
;;;127    		if((0==strncmp(words[0],"ok",strlen("ok")))&&(0==strncmp(words[1],"STA",strlen("STA"))))
00002e  2202              MOVS     r2,#2
000030  a10a              ADR      r1,|L6.92|
000032  9810              LDR      r0,[sp,#0x40]
000034  f7fffffe          BL       strncmp
000038  b930              CBNZ     r0,|L6.72|
00003a  2203              MOVS     r2,#3
00003c  a108              ADR      r1,|L6.96|
00003e  9811              LDR      r0,[sp,#0x44]
000040  f7fffffe          BL       strncmp
000044  2800              CMP      r0,#0
000046  d001              BEQ      |L6.76|
                  |L6.72|
;;;128    		{
;;;129    		  return 0;
;;;130    		}
;;;131    	}	
;;;132    	return -1;	
000048  f04f30ff          MOV      r0,#0xffffffff
                  |L6.76|
;;;133    }
00004c  b017              ADD      sp,sp,#0x5c
00004e  bd00              POP      {pc}
;;;134    /// <summary>
                          ENDP

                  |L6.80|
000050  41542b57          DCB      "AT+WMODE\r\n",0
000054  4d4f4445
000058  0d0a00  
00005b  00                DCB      0
                  |L6.92|
00005c  6f6b00            DCB      "ok",0
00005f  00                DCB      0
                  |L6.96|
000060  53544100          DCB      "STA",0

                          AREA ||i.is_connect_to_router||, CODE, READONLY, ALIGN=2

                  is_connect_to_router PROC
;;;13     /// </summary>
;;;14     int is_connect_to_router(void)
000000  b510              PUSH     {r4,lr}
;;;15     {
000002  b096              SUB      sp,sp,#0x58
;;;16     	char *words[6]={NULL};
000004  2118              MOVS     r1,#0x18
000006  a810              ADD      r0,sp,#0x40
000008  f7fffffe          BL       __aeabi_memclr4
;;;17     	char rsp[64]={0};
00000c  2140              MOVS     r1,#0x40
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memclr4
;;;18     	hfat_send_cmd("AT+WSSSID\r\n",sizeof("AT+WSSSID\r\n"),rsp,64);
000014  2340              MOVS     r3,#0x40
000016  466a              MOV      r2,sp
000018  210c              MOVS     r1,#0xc
00001a  a01d              ADR      r0,|L7.144|
00001c  f7fffffe          BL       hfat_send_cmd
;;;19     	if(hfat_get_words(rsp,words, 3)>0)
000020  2203              MOVS     r2,#3
000022  a910              ADD      r1,sp,#0x40
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       hfat_get_words
;;;20     	{
;;;21     		if(0!=strncmp(words[0],"ok",strlen("ok"))||0!=strncmp(words[1],"fengwen_test",strlen("fengwen_test")))
;;;22     		{
;;;23     		  return -1;
00002a  f04f34ff          MOV      r4,#0xffffffff
00002e  2800              CMP      r0,#0                 ;19
000030  dd0b              BLE      |L7.74|
000032  2202              MOVS     r2,#2                 ;21
000034  a119              ADR      r1,|L7.156|
000036  9810              LDR      r0,[sp,#0x40]         ;21
000038  f7fffffe          BL       strncmp
00003c  bb10              CBNZ     r0,|L7.132|
00003e  220c              MOVS     r2,#0xc               ;21
000040  a117              ADR      r1,|L7.160|
000042  9811              LDR      r0,[sp,#0x44]         ;21
000044  f7fffffe          BL       strncmp
000048  b9e0              CBNZ     r0,|L7.132|
                  |L7.74|
;;;24     		}
;;;25     	}	
;;;26       memset(rsp,0x00,sizeof(rsp));
00004a  2140              MOVS     r1,#0x40
00004c  4668              MOV      r0,sp
00004e  f7fffffe          BL       __aeabi_memclr4
;;;27     	hfat_send_cmd("AT+WSKEY\r\n",sizeof("AT+WSKEY\r\n"),rsp,64);
000052  2340              MOVS     r3,#0x40
000054  466a              MOV      r2,sp
000056  210b              MOVS     r1,#0xb
000058  a015              ADR      r0,|L7.176|
00005a  f7fffffe          BL       hfat_send_cmd
;;;28     	if(hfat_get_words(rsp,words, 5)>0)
00005e  2205              MOVS     r2,#5
000060  a910              ADD      r1,sp,#0x40
000062  4668              MOV      r0,sp
000064  f7fffffe          BL       hfat_get_words
000068  2800              CMP      r0,#0
00006a  dd0e              BLE      |L7.138|
;;;29     	{
;;;30     		if(0!=strncmp(words[0],"ok",strlen("ok"))||0!=strncmp(words[3],"1234567890",strlen("1234567890")))
00006c  2202              MOVS     r2,#2
00006e  a10b              ADR      r1,|L7.156|
000070  9810              LDR      r0,[sp,#0x40]
000072  f7fffffe          BL       strncmp
000076  b928              CBNZ     r0,|L7.132|
000078  220a              MOVS     r2,#0xa
00007a  a110              ADR      r1,|L7.188|
00007c  9813              LDR      r0,[sp,#0x4c]
00007e  f7fffffe          BL       strncmp
000082  b110              CBZ      r0,|L7.138|
                  |L7.132|
;;;31     		{
;;;32     		  return -1;
000084  4620              MOV      r0,r4
                  |L7.134|
;;;33     		}
;;;34     	}	
;;;35       return 0;	
;;;36     }
000086  b016              ADD      sp,sp,#0x58
000088  bd10              POP      {r4,pc}
                  |L7.138|
00008a  2000              MOVS     r0,#0                 ;35
00008c  e7fb              B        |L7.134|
;;;37     /// <summary>
                          ENDP

00008e  0000              DCW      0x0000
                  |L7.144|
000090  41542b57          DCB      "AT+WSSSID\r\n",0
000094  53535349
000098  440d0a00
                  |L7.156|
00009c  6f6b00            DCB      "ok",0
00009f  00                DCB      0
                  |L7.160|
0000a0  66656e67          DCB      "fengwen_test",0
0000a4  77656e5f
0000a8  74657374
0000ac  00      
0000ad  00                DCB      0
0000ae  00                DCB      0
0000af  00                DCB      0
                  |L7.176|
0000b0  41542b57          DCB      "AT+WSKEY\r\n",0
0000b4  534b4559
0000b8  0d0a00  
0000bb  00                DCB      0
                  |L7.188|
0000bc  31323334          DCB      "1234567890",0
0000c0  35363738
0000c4  393000  
0000c7  00                DCB      0

                          AREA ||i.is_connect_to_server||, CODE, READONLY, ALIGN=2

                  is_connect_to_server PROC
;;;65     /// </summary>
;;;66     int is_connect_to_server(void)
000000  b500              PUSH     {lr}
;;;67     {
000002  b097              SUB      sp,sp,#0x5c
;;;68     	char *words[6]={NULL};
000004  2118              MOVS     r1,#0x18
000006  a810              ADD      r0,sp,#0x40
000008  f7fffffe          BL       __aeabi_memclr4
;;;69     	char rsp[64]={0};
00000c  2140              MOVS     r1,#0x40
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memclr4
;;;70     	hfat_send_cmd("AT+SOCKB\r\n",sizeof("AT+SOCKB\r\n"),rsp,64);
000014  2340              MOVS     r3,#0x40
000016  466a              MOV      r2,sp
000018  210b              MOVS     r1,#0xb
00001a  a013              ADR      r0,|L8.104|
00001c  f7fffffe          BL       hfat_send_cmd
;;;71     	if(hfat_get_words(rsp,words, 5)>0)
000020  2205              MOVS     r2,#5
000022  a910              ADD      r1,sp,#0x40
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       hfat_get_words
00002a  2800              CMP      r0,#0
00002c  dd18              BLE      |L8.96|
;;;72     	{
;;;73     		if((0==strncmp(words[0],"ok",strlen("ok")))&&(0==strncmp(words[1],"TCP",strlen("TCP")))  \
00002e  2202              MOVS     r2,#2
000030  a110              ADR      r1,|L8.116|
000032  9810              LDR      r0,[sp,#0x40]
000034  f7fffffe          BL       strncmp
000038  b990              CBNZ     r0,|L8.96|
00003a  2203              MOVS     r2,#3
00003c  a10e              ADR      r1,|L8.120|
00003e  9811              LDR      r0,[sp,#0x44]
000040  f7fffffe          BL       strncmp
000044  b960              CBNZ     r0,|L8.96|
;;;74     			&&(0==strncmp(words[2],"12345",strlen("12345")))&&(0==strncmp(words[3],"192.168.1.110",strlen("192.168.1.110")))
000046  2205              MOVS     r2,#5
000048  a10c              ADR      r1,|L8.124|
00004a  9812              LDR      r0,[sp,#0x48]
00004c  f7fffffe          BL       strncmp
000050  b930              CBNZ     r0,|L8.96|
000052  220d              MOVS     r2,#0xd
000054  a10b              ADR      r1,|L8.132|
000056  9813              LDR      r0,[sp,#0x4c]
000058  f7fffffe          BL       strncmp
00005c  2800              CMP      r0,#0
00005e  d001              BEQ      |L8.100|
                  |L8.96|
;;;75     		)
;;;76     		{
;;;77     		  return 0;
;;;78     		}
;;;79     	}	
;;;80     	return -1;	
000060  f04f30ff          MOV      r0,#0xffffffff
                  |L8.100|
;;;81     }
000064  b017              ADD      sp,sp,#0x5c
000066  bd00              POP      {pc}
;;;82     /// <summary>
                          ENDP

                  |L8.104|
000068  41542b53          DCB      "AT+SOCKB\r\n",0
00006c  4f434b42
000070  0d0a00  
000073  00                DCB      0
                  |L8.116|
000074  6f6b00            DCB      "ok",0
000077  00                DCB      0
                  |L8.120|
000078  54435000          DCB      "TCP",0
                  |L8.124|
00007c  31323334          DCB      "12345",0
000080  3500    
000082  00                DCB      0
000083  00                DCB      0
                  |L8.132|
000084  3139322e          DCB      "192.168.1.110",0
000088  3136382e
00008c  312e3131
000090  3000    
000092  00                DCB      0
000093  00                DCB      0

                          AREA ||i.is_sockb_connect||, CODE, READONLY, ALIGN=2

                  is_sockb_connect PROC
;;;84     /// </summary>
;;;85     int is_sockb_connect(void)
000000  b500              PUSH     {lr}
;;;86     {
000002  b097              SUB      sp,sp,#0x5c
;;;87     	char *words[6]={NULL};
000004  2118              MOVS     r1,#0x18
000006  a810              ADD      r0,sp,#0x40
000008  f7fffffe          BL       __aeabi_memclr4
;;;88     	char rsp[64]={0};
00000c  2140              MOVS     r1,#0x40
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memclr4
;;;89     	hfat_send_cmd("AT+TCPDISB\r\n",sizeof("AT+TCPDISB\r\n"),rsp,64);
000014  2340              MOVS     r3,#0x40
000016  466a              MOV      r2,sp
000018  210d              MOVS     r1,#0xd
00001a  a00d              ADR      r0,|L9.80|
00001c  f7fffffe          BL       hfat_send_cmd
;;;90     	if(hfat_get_words(rsp,words, 3)>0)
000020  2203              MOVS     r2,#3
000022  a910              ADD      r1,sp,#0x40
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       hfat_get_words
00002a  2800              CMP      r0,#0
00002c  dd0c              BLE      |L9.72|
;;;91     	{
;;;92     		if((0==strncmp(words[0],"ok",strlen("ok")))&&(0==strncmp(words[1],"on",strlen("on"))))
00002e  2202              MOVS     r2,#2
000030  a10b              ADR      r1,|L9.96|
000032  9810              LDR      r0,[sp,#0x40]
000034  f7fffffe          BL       strncmp
000038  b930              CBNZ     r0,|L9.72|
00003a  2202              MOVS     r2,#2
00003c  a109              ADR      r1,|L9.100|
00003e  9811              LDR      r0,[sp,#0x44]
000040  f7fffffe          BL       strncmp
000044  2800              CMP      r0,#0
000046  d001              BEQ      |L9.76|
                  |L9.72|
;;;93     		{
;;;94     		  return 0;
;;;95     		}
;;;96     	}	
;;;97     	return -1;	
000048  f04f30ff          MOV      r0,#0xffffffff
                  |L9.76|
;;;98     }
00004c  b017              ADD      sp,sp,#0x5c
00004e  bd00              POP      {pc}
;;;99     /// <summary>
                          ENDP

                  |L9.80|
000050  41542b54          DCB      "AT+TCPDISB\r\n",0
000054  43504449
000058  53420d0a
00005c  00      
00005d  00                DCB      0
00005e  00                DCB      0
00005f  00                DCB      0
                  |L9.96|
000060  6f6b00            DCB      "ok",0
000063  00                DCB      0
                  |L9.100|
000064  6f6e00            DCB      "on",0
000067  00                DCB      0

                          AREA ||i.proChecksumGen||, CODE, READONLY, ALIGN=1

                  proChecksumGen PROC
;;;213    /// </summary>
;;;214    int proChecksumGen(uint8_t * pro_buff)
000000  b510              PUSH     {r4,lr}
;;;215    {
;;;216    	int i;
;;;217    	uint8_t sum=0;
000002  2200              MOVS     r2,#0
;;;218    	for(i=0;i<pro_buff[1]-1;i++)
000004  7843              LDRB     r3,[r0,#1]
000006  4611              MOV      r1,r2
000008  1e5b              SUBS     r3,r3,#1
00000a  e003              B        |L10.20|
                  |L10.12|
;;;219    	{
;;;220    		sum+=pro_buff[i];
00000c  5c44              LDRB     r4,[r0,r1]
00000e  1c49              ADDS     r1,r1,#1
000010  4422              ADD      r2,r2,r4
000012  b2d2              UXTB     r2,r2
                  |L10.20|
000014  428b              CMP      r3,r1                 ;218
000016  dcf9              BGT      |L10.12|
;;;221    	}
;;;222    	sum=~sum;
000018  43d0              MVNS     r0,r2
00001a  1c40              ADDS     r0,r0,#1
;;;223    	sum+=1;
00001c  b2c0              UXTB     r0,r0
;;;224    	return sum;
;;;225    }
00001e  bd10              POP      {r4,pc}
;;;226    /// <summary>
                          ENDP


                          AREA ||i.proSendWrapper||, CODE, READONLY, ALIGN=2

                  proSendWrapper PROC
;;;228    /// </summary>
;;;229    void proSendWrapper(uint16_t pack_decs,uint16_t msg_type,uint8_t* msg,uint8_t msg_len)
000000  b570              PUSH     {r4-r6,lr}
;;;230    {
;;;231    	int i;
;;;232    	proSendBuff[0]=0xaa;
000002  4c18              LDR      r4,|L11.100|
000004  25aa              MOVS     r5,#0xaa
000006  7025              STRB     r5,[r4,#0]
;;;233    	proSendBuff[1]=0x11+msg_len;
000008  f1030511          ADD      r5,r3,#0x11
00000c  7065              STRB     r5,[r4,#1]
;;;234    	proSendBuff[2]=pack_decs>>8;  
00000e  0a05              LSRS     r5,r0,#8
000010  70a5              STRB     r5,[r4,#2]
;;;235    	proSendBuff[3]=pack_decs>>0;  
000012  70e0              STRB     r0,[r4,#3]
;;;236    	for(i=0;i<8;i++)  proSendBuff[i+4]=0;
000014  2000              MOVS     r0,#0
000016  4605              MOV      r5,r0
                  |L11.24|
000018  1826              ADDS     r6,r4,r0
00001a  1c40              ADDS     r0,r0,#1
00001c  7135              STRB     r5,[r6,#4]
00001e  2808              CMP      r0,#8
000020  dbfa              BLT      |L11.24|
;;;237    	proSendBuff[12]=msg_type>>8;  
000022  0a08              LSRS     r0,r1,#8
000024  7320              STRB     r0,[r4,#0xc]
;;;238    	proSendBuff[13]=msg_type>>0; 	
000026  7361              STRB     r1,[r4,#0xd]
;;;239    	for(i=0;i<2;i++)  proSendBuff[i+14]=0;
000028  2000              MOVS     r0,#0
                  |L11.42|
00002a  1821              ADDS     r1,r4,r0
00002c  1c40              ADDS     r0,r0,#1
00002e  738d              STRB     r5,[r1,#0xe]
000030  2802              CMP      r0,#2
000032  dbfa              BLT      |L11.42|
;;;240    	if(msg!=NULL)
000034  b13a              CBZ      r2,|L11.70|
;;;241    	{
;;;242    		for(i=0;i<msg_len;i++) proSendBuff[i+16]=msg[i];	
000036  2000              MOVS     r0,#0
000038  e003              B        |L11.66|
                  |L11.58|
00003a  5c11              LDRB     r1,[r2,r0]
00003c  1825              ADDS     r5,r4,r0
00003e  1c40              ADDS     r0,r0,#1
000040  7429              STRB     r1,[r5,#0x10]
                  |L11.66|
000042  4298              CMP      r0,r3
000044  dbf9              BLT      |L11.58|
                  |L11.70|
;;;243    	}
;;;244    	proSendBuff[proSendBuff[1]-1]=proChecksumGen(proSendBuff);
000046  4807              LDR      r0,|L11.100|
000048  f7fffffe          BL       proChecksumGen
00004c  4905              LDR      r1,|L11.100|
00004e  7862              LDRB     r2,[r4,#1]  ; proSendBuff
000050  1e49              SUBS     r1,r1,#1
;;;245      hfuart_send(HFUART0,(char *)proSendBuff,proSendBuff[1],100);
000052  2364              MOVS     r3,#0x64
000054  5450              STRB     r0,[r2,r1]            ;244
000056  7862              LDRB     r2,[r4,#1]  ; proSendBuff
000058  e8bd4070          POP      {r4-r6,lr}
00005c  1c49              ADDS     r1,r1,#1
00005e  2009              MOVS     r0,#9
000060  f7ffbffe          B.W      hfuart_send
;;;246    }
;;;247    /// <summary>
                          ENDP

                  |L11.100|
                          DCD      ||.bss||

                          AREA ||i.restart_device||, CODE, READONLY, ALIGN=2

                  restart_device PROC
;;;205    /// </summary>
;;;206    void restart_device(void)
000000  b500              PUSH     {lr}
;;;207    {
000002  b091              SUB      sp,sp,#0x44
;;;208    	char rsp[64]={0};
000004  2140              MOVS     r1,#0x40
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       __aeabi_memclr4
;;;209    	hfat_send_cmd("AT+Z\r\n",sizeof("AT+Z\r\n"),rsp,64);
00000c  2340              MOVS     r3,#0x40
00000e  466a              MOV      r2,sp
000010  2107              MOVS     r1,#7
000012  a002              ADR      r0,|L12.28|
000014  f7fffffe          BL       hfat_send_cmd
;;;210    }
000018  b011              ADD      sp,sp,#0x44
00001a  bd00              POP      {pc}
;;;211    /// <summary>
                          ENDP

                  |L12.28|
00001c  41542b5a          DCB      "AT+Z\r\n",0
000020  0d0a00  
000023  00                DCB      0

                          AREA ||i.set_work_mode||, CODE, READONLY, ALIGN=2

                  set_work_mode PROC
;;;136    /// </summary>
;;;137    int set_work_mode(void)
000000  b500              PUSH     {lr}
;;;138    {
000002  b097              SUB      sp,sp,#0x5c
;;;139    	char *words[6]={NULL};
000004  2118              MOVS     r1,#0x18
000006  a810              ADD      r0,sp,#0x40
000008  f7fffffe          BL       __aeabi_memclr4
;;;140    	char rsp[64]={0};
00000c  2140              MOVS     r1,#0x40
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memclr4
;;;141    	hfat_send_cmd("AT+WMODE=STA\r\n",sizeof("AT+WMODE=STA\r\n"),rsp,64);
000014  2340              MOVS     r3,#0x40
000016  466a              MOV      r2,sp
000018  210f              MOVS     r1,#0xf
00001a  a00a              ADR      r0,|L13.68|
00001c  f7fffffe          BL       hfat_send_cmd
;;;142    	if(hfat_get_words(rsp,words, 3)>0)
000020  2203              MOVS     r2,#3
000022  a910              ADD      r1,sp,#0x40
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       hfat_get_words
00002a  2800              CMP      r0,#0
00002c  dd06              BLE      |L13.60|
;;;143    	{
;;;144    		if((0==strncmp(words[0],"ok",strlen("ok"))))
00002e  2202              MOVS     r2,#2
000030  a108              ADR      r1,|L13.84|
000032  9810              LDR      r0,[sp,#0x40]
000034  f7fffffe          BL       strncmp
000038  2800              CMP      r0,#0
00003a  d001              BEQ      |L13.64|
                  |L13.60|
;;;145    		{
;;;146    		  return 0;
;;;147    		}
;;;148    	}	
;;;149    	return -1;	
00003c  f04f30ff          MOV      r0,#0xffffffff
                  |L13.64|
;;;150    }
000040  b017              ADD      sp,sp,#0x5c
000042  bd00              POP      {pc}
;;;151    /// <summary>
                          ENDP

                  |L13.68|
000044  41542b57          DCB      "AT+WMODE=STA\r\n",0
000048  4d4f4445
00004c  3d535441
000050  0d0a00  
000053  00                DCB      0
                  |L13.84|
000054  6f6b00            DCB      "ok",0
000057  00                DCB      0

                          AREA ||i.sockb_connect_to_server||, CODE, READONLY, ALIGN=2

                  sockb_connect_to_server PROC
;;;101    /// </summary>
;;;102    int sockb_connect_to_server(void)
000000  b500              PUSH     {lr}
;;;103    {
000002  b097              SUB      sp,sp,#0x5c
;;;104    	char *words[6]={NULL};
000004  2118              MOVS     r1,#0x18
000006  a810              ADD      r0,sp,#0x40
000008  f7fffffe          BL       __aeabi_memclr4
;;;105    	char rsp[64]={0};
00000c  2140              MOVS     r1,#0x40
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memclr4
;;;106    	hfat_send_cmd("AT+TCPDISB=on\r\n",sizeof("AT+TCPDISB=on\r\n"),rsp,64);
000014  2340              MOVS     r3,#0x40
000016  466a              MOV      r2,sp
000018  2110              MOVS     r1,#0x10
00001a  a00c              ADR      r0,|L14.76|
00001c  f7fffffe          BL       hfat_send_cmd
;;;107    	msleep(2000);
000020  f44f60fa          MOV      r0,#0x7d0
000024  f7fffffe          BL       hf_thread_delay
;;;108    	if(hfat_get_words(rsp,words, 2)>0)
000028  2202              MOVS     r2,#2
00002a  a910              ADD      r1,sp,#0x40
00002c  4668              MOV      r0,sp
00002e  f7fffffe          BL       hfat_get_words
000032  2800              CMP      r0,#0
000034  dd06              BLE      |L14.68|
;;;109    	{
;;;110    		if((0==strncmp(words[0],"ok",strlen("ok"))))
000036  2202              MOVS     r2,#2
000038  a108              ADR      r1,|L14.92|
00003a  9810              LDR      r0,[sp,#0x40]
00003c  f7fffffe          BL       strncmp
000040  2800              CMP      r0,#0
000042  d001              BEQ      |L14.72|
                  |L14.68|
;;;111    		{
;;;112    		  return 0;
;;;113    		}
;;;114    	}	
;;;115    	return -1;	
000044  f04f30ff          MOV      r0,#0xffffffff
                  |L14.72|
;;;116    }
000048  b017              ADD      sp,sp,#0x5c
00004a  bd00              POP      {pc}
;;;117    /// <summary>
                          ENDP

                  |L14.76|
00004c  41542b54          DCB      "AT+TCPDISB=on\r\n",0
000050  43504449
000054  53423d6f
000058  6e0d0a00
                  |L14.92|
00005c  6f6b00            DCB      "ok",0
00005f  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  proSendBuff
                          %        48

                          AREA ||.data||, DATA, ALIGN=0

                  sta_mac
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  0000              DCB      0x00,0x00
