/*----------------------------------------------------------------------
 *			SW Flash/SDRAM Download Configuration Script
 * Note:
 *	 Work Mode:Support different work mode,but OTP+ROM mode work on FPGA platform only,Flash only mode must select the VECTRESET reset
 *   Hardware Platform:You can select FPGA test platform or ASIC chip platform
 *   Oscillator Select:Select external oscillator,it can speed up the download,if you cannot be
                       sure,select 'None'
 *   Fast Erase:Merge the multi-sectors erase into block erase,if signal of board not good,select 'Normal'
 *   Lock Range:prevent data damage from write protection 
 *   Debug Port:downloader debug interface
  *   Download Offset;download the code to flash offset address with 4KB align
 *-----------------------------------------------------------------------*/




FUNC void Setup (void) {
		int i;
		
	_WDWORD(0x40020118, 7);
	
	_WDWORD(0x20010000,0xFFFFFFFF);
	
    //Work Mode[0:OTP only,1:OTP+FLASH,2:OTP+SDRAM,3:OTP+ROM,4:FLASH only,5:SDRAM Test]
    _WDWORD(0x20007C00,1);

    //Hardware Platform[0:ASIC platform,1:FPGA platform]
    _WDWORD(0x20007C04,0);

    //Oscillator Select[-1:None,0:32K,1:1M,2:2M,...,31:31M]
    _WDWORD(0x20007C08,0);

    //Fast Erase[0:Nomal,1:Fast]
    _WDWORD(0x20007C0C,0);

    //Lock Range[0:None,1:50%,2:75%,3:87.5%,4:100%]
    _WDWORD(0x20007C10,0);
    
    //Debug Port[0:port 0,1:port 1,2:port 2,-1:none]
    _WDWORD(0x20007C14,-1);
    
    //Download Offset[0:0x00000000,where:0xWHERE]
    _WDWORD(0x20007C18,0);	//_WDWORD(0x20007C18,0x1a0000);
	
	//	_WDWORD(0x20007C1C, 0x4352434E);
	
	_WDWORD(0x20007C20, 0x1000000);
				
//		for(i=0 ; i<100; i+=4)
//		{
//				
//				_WDWORD(0x20007C1C+i, 0x4352434E);
//		}
		
}
Setup();

_WDWORD(0x20010000,0xF04FB5F8);
_WDWORD(0x20010004,0x21FF4080);
_WDWORD(0x20010008,0x0C50EA4F);
_WDWORD(0x2001000C,0x40C0F500);
_WDWORD(0x20010010,0x75E0F44F);
_WDWORD(0x20010014,0x61016185);
_WDWORD(0x20010018,0x61C121E0);
_WDWORD(0x2001001C,0x60C32300);
_WDWORD(0x20010020,0x62042401);
_WDWORD(0x20010024,0x6AC26203);
_WDWORD(0x20010028,0xD1FC07D2);
_WDWORD(0x2001002C,0xF44F2605);
_WDWORD(0x20010030,0x61855254);
_WDWORD(0x20010034,0x27C06106);
_WDWORD(0x20010038,0x60C361C7);
_WDWORD(0x2001003C,0x62036204);
_WDWORD(0x20010040,0xF8D04462);
_WDWORD(0x20010044,0xEA5FC02C);
_WDWORD(0x20010048,0xD1FA7CCC);
_WDWORD(0x2001004C,0xC024F8D0);
_WDWORD(0x20010050,0x7CCCEA5F);
_WDWORD(0x20010054,0xF04FD1FA);
_WDWORD(0x20010058,0xF8820CD0);
_WDWORD(0x2001005C,0xF8D0C014);
_WDWORD(0x20010060,0xF8ADC000);
_WDWORD(0x20010064,0xF8BDC000);
_WDWORD(0x20010068,0xF02CC000);
_WDWORD(0x2001006C,0xF8AD0C3C);
_WDWORD(0x20010070,0xF8BDC000);
_WDWORD(0x20010074,0xF8C0C000);
_WDWORD(0x20010078,0xF04FC004);
_WDWORD(0x2001007C,0xF8C00C06);
_WDWORD(0x20010080,0x6185C010);
_WDWORD(0x20010084,0x60C361C1);
_WDWORD(0x20010088,0x62036204);
_WDWORD(0x2001008C,0x311F7D11);
_WDWORD(0x20010090,0x6AC17511);
_WDWORD(0x20010094,0xD1FC07C9);
_WDWORD(0x20010098,0x61856104);
_WDWORD(0x2001009C,0x61C121A0);
_WDWORD(0x200100A0,0x620460C3);
_WDWORD(0x200100A4,0x6AC16203);
_WDWORD(0x200100A8,0xD1FC07C9);
_WDWORD(0x200100AC,0xF0416881);
_WDWORD(0x200100B0,0x60810108);
_WDWORD(0x200100B4,0x61856106);
_WDWORD(0x200100B8,0x60C361C7);
_WDWORD(0x200100BC,0x62036204);
_WDWORD(0x200100C0,0x07C96AC1);
_WDWORD(0x200100C4,0x6A41D1FC);
_WDWORD(0x200100C8,0xD1FC07C9);
_WDWORD(0x200100CC,0xF8AD6801);
_WDWORD(0x200100D0,0xF8BD1000);
_WDWORD(0x200100D4,0x07C91000);
_WDWORD(0x200100D8,0x75D3D1EC);
_WDWORD(0x200100DC,0xF0216881);
_WDWORD(0x200100E0,0x60810108);
_WDWORD(0x200100E4,0x0000BDF8);

printf("boot version: %d.%d.%d",(_RDWORD(0x7c0402)&0x00ff00)>>8,(_RDWORD(0x7c0402)&0x000000ff)/10,(_RDWORD(0x7c0402)&0x000000ff)%10);







